{"version":3,"sources":["reportWebVitals.js","components/SignIn&SignUp/SignIn.js","components/SignIn&SignUp/SignUp.js","components/Navbar/Header.js","components/Navbar/Navbar.js","components/ContextAPI/AppReducer.js","components/ContextAPI/FetchUsersTransactions.js","components/ContextAPI/GlobalState.js","components/Overview/Balance.js","components/Overview/PopUp.js","components/Overview/ComingUp.js","components/Overview/History.js","components/Overview/Charts/MultiAxis.tsx","components/Overview/Charts/Radar.tsx","components/Overview/Overview.js","components/AddPayment/AddPayment.js","components/Report/SpentEarned.js","components/Report/Breakdown.js","components/Report/Chart.js","components/Report/Report.js","router/AppRouter.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","SignIn","navigate","useNavigate","useState","setError","email","setEmail","password","setPassword","handleFormSubmit","event","a","preventDefault","target","result","alert","fetch","method","headers","body","JSON","stringify","response","json","data","console","log","token","localStorage","setItem","error","message","Box","className","sx","display","alignItems","m","onSubmit","Typography","variant","gutterBottom","component","px","FormControl","InputLabel","htmlFor","Input","startAdornment","InputAdornment","position","type","value","onChange","e","placeholder","Button","to","SignUp","name","setName","Header","Navbar","AppReducer","state","action","index","findIndex","expense","id","payload","splice","newState","map","item","text","amount","FetchUsersTransactions","user","setUser","globalState","useContext","GlobalContext","useEffect","getItem","length","inicialState","date","categories","createContext","GlobalProvider","children","useReducer","dispatch","Provider","history","deleteTransaction","addTransaction","newTransaction","updateTransaction","updatedTransaction","Balance","total","values","reduce","acc","toFixed","PopUp","props","newText","setNewText","newAmount","setNewAmount","callDelete","delete","popUpData","res","closePopUp","close","onClick","newData","parseInt","update","ComingUp","open","isUpdating","setIsUpdating","currentDateMoment","moment","currentDate","_d","format","futureExpenses","filter","History","flexGrow","Grid","container","spacing","xs","md","columns","sm","Math","abs","ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","options","redraw","responsive","interaction","mode","intersect","stacked","plugins","title","scales","y","y1","grid","drawOnChartArea","labels","datasets","label","faker","datatype","number","min","max","borderColor","backgroundColor","yAxisID","MultiAxis","RadialLinearScale","Filler","borderWidth","App","Overview","AddPayment","setText","setDate","setCategories","setAmount","fontSize","input","Select","labelId","MenuItem","SpentEarned","amounts","earned","spent","Paper","elevation","ArcElement","Breakdown","setExpense","mainData","Chart","bordershadow","Report","AppRouter","path","element","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sSAYeA,G,OAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,+BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,iLCoGCQ,EA/FA,WAEX,IAAIC,EAAWC,cACf,EAAwBC,mBAAS,MAAjC,mBAAYC,GAAZ,WACA,EAA0BD,mBAAS,IAAnC,mBAAOE,EAAP,KAAcC,EAAd,KACA,EAAgCH,mBAAS,IAAzC,mBAAOI,EAAP,KAAiBC,EAAjB,KAEMC,EAAgB,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,6DACrBD,EAAME,iBADe,SAEFF,EAAMG,OAFJ,UAEjBC,EAFiB,OAIP,KAAVT,GAA6B,KAAbE,EAJC,gBAKjBQ,MAAM,gDALW,wCAOMC,MAAM,4EAA6E,CACtGC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBhB,QACAE,eAdS,eAOXe,EAPW,iBAkBEA,EAASC,OAlBX,QAkBXC,EAlBW,OAoBjBC,QAAQC,IAAIF,GACRA,EAAKG,OACLC,aAAaC,QAAb,eAAqCL,EAAKG,OAC1C1B,EAAS,cACFa,EAAOgB,OACd1B,EAASU,EAAOgB,OAEpBf,MAAMS,EAAKO,SACXzB,EAAS,IACTE,EAAY,IA7BK,4CAAH,sDAiCtB,OACI,mCACI,cAACwB,EAAA,EAAD,CAAKC,UAAU,mBAAmBC,GAAI,CAAEC,QAAS,OAAQC,WAAY,WAAYC,EAAG,GAApF,SACI,uBAAMC,SAAU7B,EAAkBwB,UAAU,cAA5C,UACI,qBAAKA,UAAU,aAAf,SACI,cAACM,EAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,EAACC,UAAU,MAAMR,GAAI,CAAEG,EAAG,EAAGM,GAAI,GAAtE,uBAIJ,eAACC,EAAA,EAAD,CAAaX,UAAU,aAAaO,QAAQ,WAAWN,GAAI,CAAEG,EAAG,GAAhE,UACI,cAACQ,EAAA,EAAD,CAAYC,QAAQ,QAApB,oBAGA,cAACC,EAAA,EAAD,CACIC,eACI,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,SACI,cAAC,IAAD,MAGRC,KAAK,QACLC,MAAO/C,EACPgD,SAAU,SAACC,GAAD,OAAOhD,EAASgD,EAAEzC,OAAOuC,QACnCG,YAAY,aAGpB,eAACX,EAAA,EAAD,CAAaJ,QAAQ,WAAWN,GAAI,CAAEG,EAAG,GAAzC,UACI,cAACQ,EAAA,EAAD,CAAYC,QAAQ,WAApB,uBAGA,cAACC,EAAA,EAAD,CACIC,eACI,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,SACI,cAAC,IAAD,MAGRC,KAAK,WACLC,MAAO7C,EACP8C,SAAU,SAACC,GAAD,OAAO9C,EAAY8C,EAAEzC,OAAOuC,QACtCG,YAAY,gBAIpB,cAACC,EAAA,EAAD,CAAQL,KAAK,SAASC,MAAM,QAAQZ,QAAQ,YAAYN,GAAI,CAAEG,EAAG,EAAGM,GAAI,GAAxE,qBAEA,eAACJ,EAAA,EAAD,CAAYN,UAAU,gBAAgBO,QAAQ,YAAYC,cAAY,EAACC,UAAU,MAAMR,GAAI,CAAEG,EAAG,GAAhG,8BAEI,cAAC,IAAD,CAAMoB,GAAG,UAAT,kC,kBCmBTC,EAxGA,WAEX,MAAwBvD,mBAAS,IAAjC,mBAAOwD,EAAP,KAAaC,EAAb,KACA,EAA0BzD,mBAAS,IAAnC,mBAAOE,EAAP,KAAcC,EAAd,KACA,EAAgCH,mBAAS,IAAzC,mBAAOI,EAAP,KAAiBC,EAAjB,KAEMC,EAAgB,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,yDACrBD,EAAME,iBAEO,KAAT+C,GAAyB,KAAVtD,GAA6B,KAAbE,EAHd,gBAIjBQ,MAAM,kDAJW,uCAMMC,MAAM,6EAA8E,CACvGC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBsC,OACAtD,QACAE,eAdS,cAMXe,EANW,iBAiBEA,EAASC,OAjBX,QAiBXC,EAjBW,OAkBjBC,QAAQC,IAAIF,GAEZoC,EAAQ,IACRtD,EAAS,IACTE,EAAY,IAtBK,4CAAH,sDA0BtB,OACI,mCACI,cAACwB,EAAA,EAAD,CAAKC,UAAU,mBAAmBC,GAAI,CAAEC,QAAS,OAAQC,WAAY,WAAYC,EAAG,GAApF,SACI,uBAAMC,SAAU7B,EAAkBwB,UAAU,cAA5C,UACI,qBAAKA,UAAU,aAAf,SACI,cAACM,EAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,EAACC,UAAU,MAAMR,GAAI,CAAEG,EAAG,EAAGM,GAAI,GAAtE,uBAIJ,eAACC,EAAA,EAAD,CAAaJ,QAAQ,WAAWN,GAAI,CAAEG,EAAG,GAAzC,UACI,cAACQ,EAAA,EAAD,CAAYC,QAAQ,OAApB,mBAGA,cAACC,EAAA,EAAD,CACIC,eACI,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,SACI,cAAC,IAAD,MAGRC,KAAK,OACLC,MAAOO,EACPN,SAAU,SAACC,GAAD,OAAOM,EAAQN,EAAEzC,OAAOuC,QAClCG,YAAY,YAIpB,eAACX,EAAA,EAAD,CAAaJ,QAAQ,WAAWN,GAAI,CAAEG,EAAG,GAAzC,UACI,cAACQ,EAAA,EAAD,CAAYC,QAAQ,QAApB,oBAGA,cAACC,EAAA,EAAD,CACIC,eACI,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,SACI,cAAC,IAAD,MAGRC,KAAK,QACLC,MAAO/C,EACPgD,SAAU,SAACC,GAAD,OAAOhD,EAASgD,EAAEzC,OAAOuC,QACnCG,YAAY,aAIpB,eAACX,EAAA,EAAD,CAAaJ,QAAQ,WAAWN,GAAI,CAAEG,EAAG,GAAzC,UACI,cAACQ,EAAA,EAAD,CAAYC,QAAQ,WAApB,uBAGA,cAACC,EAAA,EAAD,CACIC,eACI,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,SACI,cAAC,IAAD,MAGRC,KAAK,WACLC,MAAO7C,EACP8C,SAAU,SAACC,GAAD,OAAO9C,EAAY8C,EAAEzC,OAAOuC,QACtCG,YAAY,gBAIpB,cAACC,EAAA,EAAD,CAAQL,KAAK,SAASC,MAAM,SAASZ,QAAQ,YAAYN,GAAI,CAAEG,EAAG,EAAGM,GAAI,GAAzE,qBAEA,eAACJ,EAAA,EAAD,CAAYC,QAAQ,YAAYC,cAAY,EAACC,UAAU,MAAMR,GAAI,CAAEG,EAAG,GAAtE,8BAEI,cAAC,IAAD,CAAMoB,GAAG,IAAT,kC,4CCvFTI,EAbA,WACX,OACI,mCACA,qBAAK5B,UAAU,mBAAf,SAGI,cAAC,IAAD,CAAUA,UAAU,yB,+DCOjB6B,EAZA,WACX,OACI,mCACI,sBAAK7B,UAAU,mBAAf,UACI,cAAC,IAAD,CAAMA,UAAU,qBAAqBwB,GAAG,YAAxC,SAAoD,cAAC,IAAD,MACpD,cAAC,IAAD,CAAMxB,UAAU,cAAcwB,GAAG,cAAjC,SAA+C,cAAC,IAAD,MAC/C,cAAC,IAAD,CAAMxB,UAAU,cAAcwB,GAAG,UAAjC,SAA2C,cAAC,IAAD,Y,yBCsB5CM,EAjCI,SAACC,EAAOC,GACvB,OAAQA,EAAOd,MACX,IAAK,SACD,IAAIe,EAAQF,EAAMG,WAAU,SAACC,GAAD,OAAaA,EAAQC,KAAOJ,EAAOK,WAI/D,OAHe,IAAXJ,GACAF,EAAMO,OAAOL,EAAO,GAEjBF,EAEX,IAAK,MACD,MAAM,GAAN,mBAAWA,GAAX,CAAkBC,EAAOK,UAC7B,IAAK,SAMD,IAAIE,EAAWR,EAAMS,KAAI,SAACC,GAKtB,OAJIA,EAAKL,KAAOJ,EAAOK,QAAQD,KAC3BK,EAAKC,KAAOV,EAAOK,QAAQK,KAC3BD,EAAKE,OAASX,EAAOK,QAAQM,QAE1BF,KAGX,OADAjD,QAAQC,IAAI8C,EAAU,aACfA,EAGX,QACI,OAAOR,ICCJa,EA/BgB,WAE3B,MAAwB1E,qBAAxB,mBAAO2E,EAAP,KAAaC,EAAb,KACMC,EAAcC,qBAAWC,GAwB/B,OArBAC,oBAAS,sBAAC,8BAAAxE,EAAA,yDAEuC,KAAzCiB,aAAawD,QAAQ,gBAFnB,gBAGFrE,MAAM,uBAHJ,uCAMqBC,MAAM,sFAAuF,CAChHC,OAAQ,MACRC,QAAS,CACL,iBAAkBU,aAAawD,QAAQ,mBAT7C,cAMI9D,EANJ,gBAYiBA,EAASC,OAZ1B,QAYIC,EAZJ,QAaOA,KAAK6D,OAAS,GACnBN,EAAQvD,EAAKA,MAdf,4CAkBP,CAACwD,IAGGF,GCxBLQ,EAAe,CACjB,CAACjB,GAAI,EAAGV,KAAM,SAAU4B,KAAM,aAAcC,WAAY,OAAQZ,QAAS,IACzE,CAACP,GAAI,EAAGV,KAAM,QAAS4B,KAAM,aAAcC,WAAY,OAAQZ,QAAS,IACxE,CAACP,GAAI,EAAGV,KAAM,QAAS4B,KAAM,aAAcC,WAAY,OAAQZ,QAAS,IACxE,CAACP,GAAI,EAAGV,KAAM,QAAS4B,KAAM,aAAcC,WAAY,OAAQZ,QAAS,KACxE,CAACP,GAAI,EAAGV,KAAM,OAAQ4B,KAAM,aAAcC,WAAY,gBAAiBZ,QAAS,IAChF,CAACP,GAAI,EAAGV,KAAM,YAAa4B,KAAM,aAAcC,WAAY,OAAQZ,OAAQ,KAC3E,CAACP,GAAI,EAAGV,KAAM,UAAW4B,KAAM,aAAcC,WAAY,YAAaZ,QAAS,KAC/E,CAACP,GAAI,EAAGV,KAAM,SAAU4B,KAAM,aAAcC,WAAY,gBAAiBZ,OAAQ,MACjF,CAACP,GAAI,EAAGV,KAAM,SAAU4B,KAAM,aAAcC,WAAY,gBAAiBZ,QAAS,IAClF,CAACP,GAAI,GAAIV,KAAM,KAAM4B,KAAM,aAAcC,WAAY,gBAAiBZ,QAAS,KAC/E,CAACP,GAAI,GAAIV,KAAM,KAAM4B,KAAM,aAAcC,WAAY,gBAAiBZ,QAAS,KAC/E,CAACP,GAAI,GAAIV,KAAM,KAAM4B,KAAM,aAAcC,WAAY,gBAAiBZ,QAAS,KAC/E,CAACP,GAAI,GAAIV,KAAM,KAAM4B,KAAM,aAAcC,WAAY,gBAAiBZ,QAAS,KAC/E,CAACP,GAAI,GAAIV,KAAM,KAAM4B,KAAM,aAAcC,WAAY,gBAAiBZ,QAAS,KAC/E,CAACP,GAAI,GAAIV,KAAM,KAAM4B,KAAM,aAAcC,WAAY,gBAAiBZ,QAAS,MAMtEM,EAAgBO,wBAAcH,GAK9BI,EAAiB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAE7B,EAA0BC,qBAAW7B,EAAYuB,GAAjD,mBAAOtB,EAAP,KAAc6B,EAAd,KAiCA,OACI,cAACX,EAAcY,SAAf,CAAwB1C,MAAO,CAC3B2C,QAAS/B,EACTgC,kBAhCkB,SAAC3B,GACvBwB,EAAS,CACL1C,KAAM,SACNmB,QAASD,KA8BT4B,eAzBe,SAACC,GACpBL,EAAS,CACL1C,KAAM,MACNmB,QAAS4B,KAuBTC,kBAlBkB,SAACC,GACvB3E,QAAQC,IAAI0E,EAAoB,uBAChCP,EAAS,CACL1C,KAAM,SACNmB,QAAS,CACLD,GAAI+B,EAAmB/B,GACvBM,KAAMyB,EAAmBzB,KACzBC,OAAQwB,EAAmBxB,YAOnC,SAMKe,K,2BC5CEU,EAvBC,WAKZ,IAKMC,EALcrB,qBAAWC,GAAvBa,QAGetB,KAAI,SAAA8B,GAAM,OAAIA,EAAO3B,UAEvB4B,QAAO,SAACC,EAAK/B,GAAN,OAAgB+B,EAAO/B,IAAO,GAAGgC,QAAQ,GAErE,OACI,qCACI,oBAAIzE,UAAU,eAAd,2BACA,uBAAMA,UAAU,gBAAhB,UACI,cAAC,IAAD,CAAiBA,UAAU,iBAC1BqE,S,2BCqEFK,GAtFD,SAACC,GACXnF,QAAQC,IAAI,SAAUkF,GAEtB,MAA8BzG,mBAAS,IAAvC,mBAAO0G,EAAP,KAAgBC,EAAhB,KACA,EAAkC3G,mBAAS,IAA3C,mBAAO4G,EAAP,KAAkBC,EAAlB,KAGMC,EAAU,uCAAG,4BAAAtG,EAAA,6DACfiG,EAAMM,OAAON,EAAMO,UAAU9C,IADd,SAEGrD,MAAM,+EAAD,OAAgF4F,EAAMO,UAAU9C,IAAM,CACzHpD,OAAQ,WAHG,OAETmG,EAFS,OAKf3F,QAAQC,IAAI0F,GACZC,IANe,2CAAH,qDAyBVA,EAAa,WACfT,EAAMU,SAGV,OACI,mCAQI,qBAAKrF,UAAU,cAAf,SACI,sBAAKA,UAAU,QAAf,UACI,cAAC,IAAD,CAAYsF,QAASF,EAAYpF,UAAU,cAC3C,qBAAKA,UAAU,gBAAf,SACI,qDAEJ,qBAAKA,UAAU,kBAAf,SACI,uBAAMK,SApCP,SAACgB,GAEhB,GADAA,EAAE1C,iBACc,KAAZiG,GAAgC,KAAdE,EAClBhG,MAAM,oCACH,CACH,IAAIyG,EAAU,CACV7C,KAAMkC,EACNjC,OAAQ6C,SAASV,GACjB1C,GAAIuC,EAAMO,UAAU9C,IAGxBuC,EAAMc,OAAOF,GACbH,MAwBY,UACI,sBAAKpF,UAAU,uBAAf,UACI,qBAAKA,UAAU,aAAf,SACI,iDAEJ,uBAAOmB,MAAOyD,EAAS1D,KAAK,OAAOI,YAAY,mBAAmBF,SAAU,SAACC,GAAD,OAAOwD,EAAWxD,EAAEzC,OAAOuC,aAE3G,sBAAKnB,UAAU,uBAAf,UACI,qBAAKA,UAAU,aAAf,SACI,mDAEJ,uBAAOmB,MAAO2D,EAAW5D,KAAK,OAAOI,YAAY,qBAAqBF,SAAU,SAACC,GAAD,OAAO0D,EAAa1D,EAAEzC,OAAOuC,aAEjH,sBAAKnB,UAAU,qBAAf,UACI,cAACuB,EAAA,EAAD,CACIL,KAAK,SACLlB,UAAU,kBACVO,QAAQ,YAHZ,oBAKA,cAACgB,EAAA,EAAD,CACI+D,QAASN,EACThF,UAAU,yBACVO,QAAQ,YAHZ,oC,6BCfjBmF,GArDE,WAGb,IAAQ5B,EAAYd,qBAAWC,GAAvBa,QACAC,EAAsBf,qBAAWC,GAAjCc,kBACAG,EAAsBlB,qBAAWC,GAAjCiB,kBACR,EAAoChG,mBAAS,CAAEyH,MAAM,IAArD,mBAAOC,EAAP,KAAmBC,EAAnB,KAEIC,EAAoBC,MAClBC,EAAcD,IAAOD,EAAkBG,IAAIC,OAAO,cAGlDC,EADUrC,EAAQsC,QAAO,SAAC7G,GAAD,OAAUA,EAAKoD,OAAS,KACxByD,QAAO,SAAC7G,GAAD,OAAQA,EAAK+D,KAAO0C,KAYpDZ,EAAa,WACfS,EAAc,CAAEF,MAAM,KAG1B,OACI,mCACI,sBAAK3F,UAAU,qBAAf,UACI,oBAAIA,UAAU,gBAAd,uBACA,qBAAKA,UAAU,yBAAf,SACKmG,EAAe/C,OAAS,EAAI+C,EAAe3D,KAAI,SAACC,GAAD,OAC5C,sBAAmBzC,UAAS,wBAAmByC,EAAKE,OAAS,EAAI,oBAAsB,qBAAvF,UACI,sBAAK3C,UAAU,kBAAf,UACI,sBAAMA,UAAU,oBAAhB,SAAsCyC,EAAKf,OAC3C,cAAC,KAAD,CAAe4D,QAAS,kBApBhClD,EAoBiDK,EAAKL,QAlBtEyD,EAAc,CACVF,MAAOC,EACPxD,OAJW,IAACA,GAoB2DpC,UAAU,wBAEjE,mBAAGA,UAAU,gBAAb,SAA8B+F,IAAOtD,EAAKa,MAAM4C,OAAO,YACvD,oBAAGlG,UAAU,kBAAb,eAAkCyC,EAAKE,UACtCiD,EAAWxD,KAAOK,EAAKL,GAAK,cAAC,GAAD,CAAOiD,MAAOD,EAAYH,OAAQlB,EAAmB0B,OAAQvB,EAAmBgB,UAAWU,IAAiB,OAPnInD,EAAKL,OASf,qBAAKpC,UAAU,qBAAf,SACI,mE,OCvCb,SAASqG,GAAQ1B,GAK5B,IAAQb,EAAYd,qBAAWC,GAAvBa,QACRtE,QAAQC,IAAIqE,EAAS,WACrB,IAAQC,EAAsBf,qBAAWC,GAAjCc,kBACAG,EAAsBlB,qBAAWC,GAAjCiB,kBACR,EAAoChG,mBAAS,CAAEyH,MAAM,IAArD,mBAAOC,EAAP,KAAmBC,EAAnB,KAWMT,GAToBxC,IASP,WACfiD,EAAc,CAAEF,MAAM,MAG1B,OACI,mCACI,cAAC5F,EAAA,EAAD,CAAKE,GAAI,CAAEqG,SAAU,GAArB,SACI,cAACC,EAAA,EAAD,CACIC,WAAS,EACTC,QAAS,CAAEC,GAAI,EAAGC,GAAI,GACtBC,QAAS,CAAEF,GAAI,EAAGG,GAAI,EAAGF,GAAI,IAC7B3G,UAAU,4BAJd,SAKK8D,EAAQV,OAAS,EAAIU,EAAQtB,KAAI,SAAAC,GAE9B,OACI,eAAC8D,EAAA,EAAD,CAAM9D,MAAI,EAACiE,GAAI,EAAGG,GAAI,EAAGF,GAAI,EAAiB3G,UAAS,+BAA0ByC,EAAKE,OAAS,EAAI,WAAa,YAAhH,UACI,qBAAI3C,UAAU,gBAAd,UACI,sBAAKA,UAAU,gBAAf,UACI,+BAAOyC,EAAKf,OACZ,uBACA,+BAAOqE,IAAOtD,EAAKa,MAAM4C,OAAO,oBAEpC,qBAAKlG,UAAU,kBAAf,SAEI,iCAAOyC,EAAKE,OAAS,EAAI,IAAM,IAA/B,IAAqCmE,KAAKC,IAAItE,EAAKE,aAEvD,qBAAK3C,UAAU,cAAf,SACI,cAAC,KAAD,CAAesF,QAAS,kBAlCxClD,EAkCyDK,EAAKL,QAhC9EyD,EAAc,CACVF,MAAOC,EACPxD,OAJW,IAACA,UAqCSwD,EAAWxD,KAAOK,EAAKL,GAAK,cAAC,GAAD,CAAOiD,MAAOD,EAAYH,OAAQlB,EAAmB0B,OAAQvB,EAAmBgB,UAAWU,IAAiB,OAfxGnD,EAAKL,OAmB9C,sBAAKpC,UAAU,oBAAf,UACI,oDACA,cAAC,IAAD,CAAMwB,GAAG,cAAcxB,UAAU,eAAjC,4C,2CC1D5BgH,KAAQC,SACJC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,MAGG,IAAMC,GAAU,CACnBC,QAAQ,EACRC,YAAY,EACZC,YAAa,CACTC,KAAM,QACNC,WAAW,GAEfC,SAAS,EACTC,QAAS,CACLC,MAAO,CACH/H,SAAS,EACTwC,KAAM,qCAGdwF,OAAQ,CACJC,EAAG,CACCjH,KAAM,SACNhB,SAAS,EACTe,SAAU,QAEdmH,GAAI,CACAlH,KAAM,SACNhB,SAAS,EACTe,SAAU,QACVoH,KAAM,CACFC,iBAAiB,MAM3BC,GAAS,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,QAE3DhJ,GAAO,CAChBgJ,UACAC,SAAU,CACN,CACIC,MAAO,YACPlJ,KAAMgJ,GAAO/F,KAAI,kBAAMkG,KAAMC,SAASC,OAAO,CAAEC,KAAM,IAAMC,IAAK,SAChEC,YAAa,oBACbC,gBAAiB,0BACjBC,QAAS,KAEb,CACIR,MAAO,YACPlJ,KAAMgJ,GAAO/F,KAAI,kBAAMkG,KAAMC,SAASC,OAAO,CAAEC,KAAM,IAAMC,IAAK,SAChEC,YAAa,oBACbC,gBAAiB,0BACjBC,QAAS,QAKN,SAASC,KACpB,OAAO,cAAC,KAAD,CAAMxB,QAAS,EAAMD,QAASA,GAASlI,KAAMA,KClExDyH,KAAQC,SACJkC,KACA/B,KACAC,KACA+B,KACA7B,KACAC,MAGG,IAAMjI,GAAO,CAChBgJ,OAAQ,CAAC,YAAa,OAAQ,gBAAiB,SAAU,OAAQ,QACjEC,SAAU,CACN,CACIC,MAAO,aACPlJ,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GACtByJ,gBAAiB,0BACjBD,YAAa,wBACbM,YAAa,KAKV,SAASC,KACpB,OAAO,cAAC,KAAD,CAAO5B,QAAQ,EAAMnI,KAAMA,KCpBtC,IAoBegK,GApBE,WAEb,OACI,mCACI,eAACxJ,EAAA,EAAD,CAAKE,GAAI,CAAEqG,SAAU,GAArB,UACI,eAACC,EAAA,EAAD,CAAMG,GAAI,EAAG1G,UAAU,qBAAvB,UACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,oBAAIA,UAAU,uBAAd,qBACA,cAAC,GAAD,OAEJ,cAAC,GAAD,IACA,cAACkJ,GAAD,IACA,cAAC,GAAD,IACA,cAAC,EAAD,U,yICkJDM,GA9JW,WAEtB,MAAwBtL,mBAAS,IAAjC,mBAAOwE,EAAP,KAAa+G,EAAb,KACA,EAAwBvL,mBAAS,IAAjC,mBAAOoF,EAAP,KAAaoG,EAAb,KACA,EAAoCxL,mBAAS,IAA7C,mBAAOqF,EAAP,KAAmBoG,EAAnB,KACA,EAA4BzL,mBAAS,GAArC,mBAAOyE,EAAP,KAAeiH,EAAf,KAKMvJ,GAFqB2C,qBAAWC,GAA9Be,eAEM,uCAAG,WAAM3C,GAAN,iBAAA3C,EAAA,yDACb2C,EAAE1C,iBAYW,KAAT+D,GAAwB,KAATY,GAA0B,KAAXX,GAAgC,KAAfY,EAbtC,gBAcTzE,MAAM,iCAdG,uCAiBcC,MAAM,sEAAuE,CAChGC,OAAQ,OACRC,QAAS,CACL,iBAAkBU,aAAawD,QAAQ,iBAE3CjE,KAAMC,KAAKC,UAAU,CACjBsC,KAAMgB,EACNY,KAAMA,EACNC,WAAYA,EACZZ,QAASA,MA1BR,cAiBHtD,EAjBG,OA8BTG,QAAQC,IAAIJ,GA9BH,UAgCUA,EAASC,OAhCnB,QAgCHC,EAhCG,OAiCTC,QAAQC,IAAIF,EAAKA,KAAK,GAAI,QAC1BT,MAAMS,EAAKO,SAIX2J,EAAQ,IACRC,EAAQ,IACRE,EAAU,IACVD,EAAc,IAzCL,4CAAH,uDAgDd,OACI,qCACI,qBAAK3J,UAAU,oBAAf,SACI,cAAC,IAAD,CAAMwB,GAAG,YAAYxB,UAAU,qBAA/B,SACI,cAAC,KAAD,CAAkB6J,SAAS,cAGnC,qBAAK7J,UAAU,aAAf,SACI,cAACM,EAAA,EAAD,CAAYN,UAAU,mBAAmBO,QAAQ,KAAKC,cAAY,EAACC,UAAU,MAAMR,GAAI,CAAEG,EAAG,EAAGM,GAAI,GAAnG,0BAIJ,cAACX,EAAA,EAAD,CAAKC,UAAU,0BAA0BC,GAAI,CAAEC,QAAS,OAAQC,WAAY,WAAYC,EAAG,GAA3F,SACI,uBAAMJ,UAAU,2BAA2BK,SAAUA,EAArD,UACI,eAACM,EAAA,EAAD,CAAaJ,QAAQ,WAAWN,GAAI,CAAEG,EAAG,GAAzC,UACI,cAACQ,EAAA,EAAD,CAAYC,QAAQ,OAApB,kBAIA,cAACC,EAAA,EAAD,CACII,KAAK,OACLC,MAAOuB,EACPtB,SAAU,SAACC,GAAD,OAAOoI,EAAQpI,EAAEzC,OAAOuC,QAClCG,YAAY,eACZc,GAAG,gCACHrB,eACI,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,SACI,cAAC,KAAD,WAMhB,eAACN,EAAA,EAAD,CAAaJ,QAAQ,WAAWN,GAAI,CAAEG,EAAG,GAAzC,UACI,cAACQ,EAAA,EAAD,CAAYC,QAAQ,OAApB,kBAIA,cAACC,EAAA,EAAD,CACIsB,GAAG,4BACHrB,eACI,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,SACI,cAAC,KAAD,MAGR6I,OAAK,EAAC5I,KAAK,OACXC,MAAOmC,EAAMlC,SAAU,SAACC,GAAD,OAAOqI,EAAQrI,EAAEzC,OAAOuC,QAC/CG,YAAY,qBAIpB,eAACX,EAAA,EAAD,CAAaJ,QAAQ,WAAWN,GAAI,CAAEG,EAAG,GAAzC,UACI,cAACQ,EAAA,EAAD,CAAYwB,GAAG,oCAAf,wBACA,eAAC2H,GAAA,EAAD,CACIhJ,eACI,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,SACI,cAAC,KAAD,MAGR+I,QAAQ,oCACR5H,GAAG,8BACHjB,MAAOoC,EACPnC,SAAU,SAACC,GAAD,OAAOsI,EAActI,EAAEzC,OAAOuC,QACxCsH,MAAM,aAVV,UAYI,cAACwB,GAAA,EAAD,CAAU9I,MAAO,YAAjB,uBACA,cAAC8I,GAAA,EAAD,CAAU9I,MAAO,OAAjB,kBACA,cAAC8I,GAAA,EAAD,CAAU9I,MAAO,gBAAjB,2BACA,cAAC8I,GAAA,EAAD,CAAU9I,MAAO,SAAjB,oBACA,cAAC8I,GAAA,EAAD,CAAU9I,MAAO,OAAjB,kBACA,cAAC8I,GAAA,EAAD,CAAU9I,MAAO,OAAjB,wBAIR,eAACR,EAAA,EAAD,CAAaJ,QAAQ,WAAWN,GAAI,CAAEG,EAAG,GAAzC,UACI,cAACQ,EAAA,EAAD,CAAYC,QAAQ,SAApB,oBAIA,cAACC,EAAA,EAAD,CACIsB,GAAG,qCACHrB,eACI,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,SACI,cAAC,KAAD,MAGR6I,OAAK,EAAC5I,KAAK,SACXC,MAAOwB,EACPvB,SAAU,SAACC,GAAD,OAAOuI,EAAUvI,EAAEzC,OAAOuC,QACpCG,YAAY,uBAIpB,cAACC,EAAA,EAAD,CAAQL,KAAK,SAASX,QAAQ,YAAYN,GAAI,CAAEG,EAAG,GAAnD,+B,WChKP8J,I,QAAc,WACzB,IAEMC,EAFcnH,qBAAWC,GAAvBa,QAEgBtB,KAAK,SAAAsB,GAAO,OAAIA,EAAQnB,UAG1CyH,EAASD,EACZ/D,QAAO,SAAA3D,GAAI,OAAIA,EAAO,KACtB8B,QAAO,SAACC,EAAK/B,GAAN,OAAgB+B,EAAO/B,IAAO,GAGlC4H,GAEH,EADDF,EAAQ/D,QAAO,SAAA3D,GAAI,OAAIA,EAAO,KAAG8B,QAAO,SAACC,EAAK/B,GAAN,OAAgB+B,EAAO/B,IAAO,GAIxE,OACE,mCACE,eAAC6H,GAAA,EAAD,CAAOC,UAAW,EAAGvK,UAAU,cAA/B,UACE,gCACE,uCACA,kCAAKqK,QAEP,gCACE,wCACA,kCAAKD,eCtBfpD,KAAQC,SAASkC,KAAmBqB,KAAYjD,KAASC,MAElD,IAAMjI,GAAO,CAClBgJ,OAAQ,CAAC,UAAW,UAAW,aAAc,UAAW,SAAU,YAClEC,SAAU,CACR,CACEC,MAAO,aACPlJ,KAAM,CAAC,GAAI,GAAI,EAAG,EAAG,EAAG,GACxByJ,gBAAiB,CACf,0BACA,0BACA,0BACA,0BACA,2BACA,2BAEFK,YAAa,KAOZ,SAASoB,KAEhB,IAAQ3G,EAAYd,qBAAWC,GAAvBa,QACR,EAA8B5F,mBAAS,IAAvC,mBAAgBwM,GAAhB,WA0BE,OAxBFxH,qBAAU,WACR,IAAMf,EAAU2B,EAAQsC,QAAO,SAAC7G,GAAD,OAAUA,EAAKoD,OAAS,KACnDgI,EAAW,CAAElC,MAAOtG,EAAQK,KAAI,SAACjD,GAAD,OAAUA,EAAKmC,QACnDiJ,SAAoB,CAClB,CACElC,MAAO,aACPlJ,KAAK,CAAC,GAAI,EAAG,EAAG,EAAG,EAAG,IACtByJ,gBAAiB,CACf,0BACA,0BACA,0BACA,0BACA,2BACA,2BAEFK,YAAa,KAGjB7J,QAAQC,IAAIkL,EAAU,QACtBD,EAAWC,GACXnL,QAAQC,IAAI0C,EAAS,aAEpB,CAAC2B,IAEK,cAAC,KAAD,CAAWvE,KAAMA,KCtDnB,SAASqL,KAGd,IAEIT,EAFgBnH,qBAAWC,GAAvBa,QAEctB,KAAK,SAAAsB,GAAO,OAAIA,EAAQnB,UAG1CyH,EAASD,EACZ/D,QAAO,SAAA3D,GAAI,OAAIA,EAAO,KACtB8B,QAAO,SAACC,EAAK/B,GAAN,OAAgB+B,EAAO/B,IAAO,GAQjClD,EAAO,CACZgJ,OAAQ,CAAC,QAAS,UAClBC,SAAU,CACR,CACEC,MAAO,aACPlJ,KAAM,EART,EADD4K,EAAQ/D,QAAO,SAAA3D,GAAI,OAAIA,EAAO,KAAG8B,QAAO,SAACC,EAAK/B,GAAN,OAAgB+B,EAAO/B,IAAO,GASpD2H,GACdrB,YAAa,CACX,2BACA,4BAEFC,gBAAiB,CACf,0BACA,2BAEFK,YAAa,EACbwB,aAAc,KAMlB,OAAO,cAAC,KAAD,CACPtL,KAAMA,IA5CRyH,KAAQC,SAASuD,KAAYjD,KAASC,M,YCoBvBsD,GAhBA,WACb,OACE,mCACE,cAAC/K,EAAA,EAAD,CAAKE,GAAI,CAAEC,QAAS,OAAQC,WAAY,SAAUC,EAAG,GAArD,SACE,eAACmG,EAAA,EAAD,CAAMvG,UAAU,mBAAhB,UACE,oBAAIA,UAAU,YAAd,oBACA,cAAC4K,GAAD,IACA,cAAC,GAAD,IACA,oBAAI5K,UAAU,YAAd,gCACA,cAACyK,GAAD,YCaKM,GAnBG,WAEd,OACQ,qBAAK/K,UAAU,YAAf,SACI,cAAC,IAAD,UAEI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOgL,KAAK,IAAIC,QAAS,cAAC,EAAD,IAAYC,OAAO,IAC5C,cAAC,IAAD,CAAOF,KAAK,UAAUC,QAAS,cAAC,EAAD,MAC/B,cAAC,IAAD,CAAOD,KAAK,YAAYC,QAAS,cAAC,GAAD,MACjC,cAAC,IAAD,CAAOD,KAAK,cAAcC,QAAS,cAAC,GAAD,MACnC,cAAC,IAAD,CAAOD,KAAK,UAAUC,QAAS,cAAC,GAAD,cCdvDE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,UACE,cAAC,GAAD,QAGJC,SAASC,eAAe,SAM1BjO,K","file":"static/js/main.d97fb31d.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","//importing react\nimport { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\n//importing material ui\nimport { Button, Input, FormControl, InputLabel, Typography, InputAdornment } from \"@mui/material\";\nimport Box from '@mui/material/Box';\n//css\nimport './SignIn.css';\n//icons\nimport LockIcon from '@mui/icons-material/Lock';\nimport EmailIcon from '@mui/icons-material/Email';\n\nconst SignIn = () => {\n\n    let navigate = useNavigate();\n    let [error, setError] = useState(null);\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const handleFormSubmit = async (event) => {\n        event.preventDefault();\n        let result = await event.target;\n        //Call the API\n        if (email === '' || password === '') {\n            alert('Unvalid email or password! Please try again.');\n        } else {\n            const response = await fetch('http://ec2-3-96-201-188.ca-central-1.compute.amazonaws.com/api/auth/login', {\n                method: \"POST\",\n                headers: {\n                    'Content-Type': \"application/json\",\n                },\n                body: JSON.stringify({\n                    email,\n                    password\n                })\n            })\n\n            const data = await response.json();\n\n            console.log(data);\n            if (data.token) {\n                localStorage.setItem(`access-token`, data.token);\n                navigate('/overview');\n            } else if (result.error) {\n                setError(result.error)\n            }\n            alert(data.message);\n            setEmail('');\n            setPassword('');\n        }\n    }\n\n    return (\n        <>\n            <Box className=\"signin-container\" sx={{ display: 'flex', alignItems: 'flex-end', m: 5 }}>\n                <form onSubmit={handleFormSubmit} className=\"signin-form\">\n                    <div className=\"sign-title\">\n                        <Typography variant=\"h6\" gutterBottom component=\"div\" sx={{ m: 5, px: 5 }}>\n                            Sign In\n                        </Typography>\n                    </div>\n                    <FormControl className=\"sign-input\" variant=\"standard\" sx={{ m: 5 }}>\n                        <InputLabel htmlFor=\"email\">\n                            Email:\n                        </InputLabel>\n                        <Input\n                            startAdornment={\n                                <InputAdornment position=\"start\">\n                                    <EmailIcon />\n                                </InputAdornment>\n                            }\n                            type=\"email\"\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                            placeholder=\"Email\"\n                        />\n                    </FormControl>\n                    <FormControl variant=\"standard\" sx={{ m: 5 }}>\n                        <InputLabel htmlFor=\"password\">\n                            Password:\n                        </InputLabel>\n                        <Input\n                            startAdornment={\n                                <InputAdornment position=\"start\">\n                                    <LockIcon />\n                                </InputAdornment>\n                            }\n                            type=\"password\"\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                            placeholder=\"Password\"\n                        />\n                    </FormControl>\n\n                    <Button type=\"submit\" value=\"Login\" variant=\"contained\" sx={{ m: 2, px: 8 }}>Sign In</Button>\n\n                    <Typography className=\"signin-member\" variant=\"subtitle1\" gutterBottom component=\"div\" sx={{ m: 2 }}>\n                        Not A Member yet?\n                        <Link to='/signUp'> Sign Up </Link>\n                    </Typography>\n\n                </form>\n            </Box>\n        </>\n    );\n}\n\nexport default SignIn;","//importing react router\nimport { Link } from \"react-router-dom\";\n//pages\nimport { Button, Input, FormControl, InputLabel, Typography, InputAdornment } from '@mui/material';\nimport Box from '@mui/material/Box';\nimport { useState } from 'react';\n//css\nimport './SignIn.css';\n//icons\nimport LockIcon from '@mui/icons-material/Lock';\nimport EmailIcon from '@mui/icons-material/Email';\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\n\nconst SignUp = () => {\n\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const handleFormSubmit = async (event) => {\n        event.preventDefault();\n        //call the API\n        if (name === '' || email === '' || password === '') {\n            alert('Something went wrong! Please fill up the form.')\n        } else {\n            const response = await fetch('http://ec2-3-96-201-188.ca-central-1.compute.amazonaws.com/api/auth/signup', {\n                method: \"POST\",\n                headers: {\n                    'Content-Type': \"application/json\"\n                },\n                body: JSON.stringify({\n                    name,\n                    email,\n                    password\n                })\n            })\n            const data = await response.json();\n            console.log(data);\n\n            setName('');\n            setEmail('');\n            setPassword('');\n        }\n    }\n\n    return (\n        <>\n            <Box className=\"signin-container\" sx={{ display: 'flex', alignItems: 'flex-end', m: 5 }}>\n                <form onSubmit={handleFormSubmit} className=\"signin-form\">\n                    <div className=\"sign-title\">\n                        <Typography variant=\"h6\" gutterBottom component=\"div\" sx={{ m: 5, px: 5 }}>\n                            Sign Up\n                        </Typography>\n                    </div>\n                    <FormControl variant=\"standard\" sx={{ m: 5 }}>\n                        <InputLabel htmlFor=\"name\">\n                            Name:\n                        </InputLabel>\n                        <Input\n                            startAdornment={\n                                <InputAdornment position=\"start\">\n                                    <AccountCircleIcon />\n                                </InputAdornment>\n                            }\n                            type=\"text\"\n                            value={name}\n                            onChange={(e) => setName(e.target.value)}\n                            placeholder=\"Name\"\n                        />\n                    </FormControl>\n\n                    <FormControl variant=\"standard\" sx={{ m: 5 }}>\n                        <InputLabel htmlFor=\"email\">\n                            Email:\n                        </InputLabel>\n                        <Input\n                            startAdornment={\n                                <InputAdornment position=\"start\">\n                                    <EmailIcon />\n                                </InputAdornment>\n                            }\n                            type=\"email\"\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                            placeholder=\"Email\"\n                        />\n                    </FormControl>\n\n                    <FormControl variant=\"standard\" sx={{ m: 5 }}>\n                        <InputLabel htmlFor=\"password\">\n                            Password:\n                        </InputLabel>\n                        <Input\n                            startAdornment={\n                                <InputAdornment position=\"start\">\n                                    <LockIcon />\n                                </InputAdornment>\n                            }\n                            type=\"password\"\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                            placeholder=\"Password\"\n                        />\n                    </FormControl>\n\n                    <Button type=\"submit\" value=\"Signup\" variant=\"contained\" sx={{ m: 5, px: 8 }}>Sing Up</Button>\n\n                    <Typography variant=\"subtitle1\" gutterBottom component=\"div\" sx={{ m: 2 }}>\n                        Already A Member?\n                        <Link to='/'> Sign In </Link>\n                    </Typography>\n                </form>\n            </Box>\n        </>\n    );\n}\n\nexport default SignUp;","import React from 'react'\n//css\nimport './Header.css';\n//icons\nimport LogoutIcon from '@mui/icons-material/Logout';\nimport MenuIcon from '@mui/icons-material/Menu';\n//react router\nimport { Link } from \"react-router-dom\";\n\nconst Header = () => {\n    return (\n        <>\n        <div className='header-container'>\n            {/* logout is just for debugging, delete later */}\n            {/* <Link to='/'><LogoutIcon /></Link> */}\n            <MenuIcon className='header-menuIcon'/>\n        </div>\n\n        </>\n    )\n}\n\nexport default Header;\n","import React from 'react'\n//css\nimport './Navbar.css'\n//importing react router modules\nimport { Link } from \"react-router-dom\";\n//importing meterial ui icons\nimport DashboardIcon from '@material-ui/icons//Dashboard';\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport PieChartIcon from '@mui/icons-material/PieChart';\n\nconst Navbar = () => {\n    return (\n        <>\n            <div className='navbar-container'>\n                <Link className='navbar-icon active' to='/overview'><DashboardIcon /></Link>\n                <Link className='navbar-icon' to='/AddPayment'><AddCircleIcon /></Link>\n                <Link className='navbar-icon' to='/report'><PieChartIcon /></Link>\n            </div>\n        </>\n    )\n}\n\nexport default Navbar;","/*App reducer contain all the actions we need \nin order to control our state changes*/\n\n/*exporting a anonimous function that will have all my actions\nFor this function to work we need the state and the action as parameters*/\nconst AppReducer = (state, action) => {\n    switch (action.type) {\n        case 'DELETE':\n            let index = state.findIndex((expense) => expense.id === action.payload);\n            if (index !== -1) {\n                state.splice(index, 1);\n            }\n            return state;\n            // return [. ..state, state.splice(item => item.id !== action.payload)];\n        case 'ADD':\n            return [...state, action.payload];\n        case 'UPDATE':\n            // console.log(state, \"REDUCER\");\n            // return state.map((item) => ({\n            //     text: item.id === action.payload.id ? item.text : action.payload.text,\n            //     amount: item.id === action.payload.id ? item.amount : action.payload.amount\n            // }))\n            let newState = state.map((item) => {\n                if (item.id === action.payload.id) {\n                    item.text = action.payload.text;\n                    item.amount = action.payload.amount;\n                }\n                return item;\n            })\n            console.log(newState, \"NEW STATE\");\n            return newState;\n\n        //the default AppReducer actions is to return the state as it is\n        default:\n            return state;\n    }\n}\n\nexport default AppReducer;","import { useState, useEffect, useContext } from 'react';\nimport { GlobalContext } from \"../ContextAPI/GlobalState\";\n\n\nconst FetchUsersTransactions = () => {\n    //user hook\n    const [user, setUser] = useState();\n    const globalState = useContext(GlobalContext);\n\n    //fetching API\n    useEffect(async () => {\n        //checking if user is logged in\n        if (localStorage.getItem('access-token') === '') {\n            alert('Please login first!');\n        } else {\n            //getting user transactions with access-token\n            const response = await fetch('http://ec2-3-96-201-188.ca-central-1.compute.amazonaws.com/api/post/getTransactions', {\n                method: \"GET\",\n                headers: {\n                    'x-access-token': localStorage.getItem('access-token'),\n                }\n            })\n            const data = await response.json();\n            if (data.data.length > 0) {\n                setUser(data.data);\n            }\n            // console.log(data.data);\n        }\n    }, [globalState]);\n\n    //returning user hook in order to use the user's transaction list (in db)\n    return user\n\n}\n\nexport default FetchUsersTransactions;","import React, { createContext, useReducer, useEffect, useState } from \"react\";\n//importing Reducer\nimport AppReducer from './AppReducer';\n//importing db data\nimport FetchUsersTransactions from './FetchUsersTransactions';\n\n//Inicial State with dummy data\nconst inicialState = [\n    {id: 1, name: 'Dinner', date: '2021-12-08', categories: 'Food', amount: -15},\n    {id: 2, name: 'Lunch', date: '2021-12-09', categories: 'Food', amount: -25},\n    {id: 3, name: 'Light', date: '2021-12-10', categories: 'Bill', amount: -75},\n    {id: 4, name: 'Water', date: '2021-12-11', categories: 'Bill', amount: -135},\n    {id: 5, name: 'Game', date: '2021-12-12', categories: 'Entertainment', amount: -79},\n    {id: 6, name: 'Freelance', date: '2021-12-13', categories: 'Food', amount: 500},\n    {id: 7, name: 'Grocery', date: '2021-12-14', categories: 'Groceries', amount: -105},\n    {id: 8, name: 'Salary', date: '2021-12-15', categories: 'Entertainment', amount: 3500},\n    {id: 9, name: 'Cinema', date: '2021-12-16', categories: 'Entertainment', amount: -35},\n    {id: 11, name: 'PC', date: '2022-01-17', categories: 'Entertainment', amount: -778},\n    {id: 12, name: 'PC', date: '2022-02-17', categories: 'Entertainment', amount: -778},\n    {id: 13, name: 'PC', date: '2022-03-17', categories: 'Entertainment', amount: -778},\n    {id: 14, name: 'PC', date: '2022-04-17', categories: 'Entertainment', amount: -778},\n    {id: 15, name: 'PC', date: '2022-05-17', categories: 'Entertainment', amount: -778},\n    {id: 16, name: 'PC', date: '2022-06-17', categories: 'Entertainment', amount: -778}\n]\n\n\n/* Creating Context\nexporting global state so other components can use it as data*/\nexport const GlobalContext = createContext(inicialState);\n\n/*Creating Provider\nSince this data will be pass for my children components,\nWe need to pass children as a props*/\nexport const GlobalProvider = ({ children }) => {\n\n    const [state, dispatch] = useReducer(AppReducer, inicialState);\n\n    //ACTIONS\n    //delete\n    const deleteTransaction = (id) => {\n        dispatch({\n            type: 'DELETE',\n            payload: id\n        });\n    };\n\n    //add\n    const addTransaction = (newTransaction) => {\n        dispatch({\n            type: 'ADD',\n            payload: newTransaction\n        });\n    };\n\n    //update \n    const updateTransaction = (updatedTransaction) => {\n        console.log(updatedTransaction, \"updated Transaction\");\n        dispatch({\n            type: 'UPDATE',\n            payload: {\n                id: updatedTransaction.id,\n                text: updatedTransaction.text,\n                amount: updatedTransaction.amount\n            }\n        });\n    };\n\n    //provider component\n    return (\n        <GlobalContext.Provider value={{\n            history: state,\n            deleteTransaction,\n            addTransaction,\n            updateTransaction\n        }}>\n            {children}\n        </GlobalContext.Provider>\n    );\n};","import React, { useContext } from \"react\";\nimport moment from \"moment\";\nimport { GlobalContext } from \"../ContextAPI/GlobalState\";\n//css\nimport './Balance.css';\n//icons\nimport AttachMoneyIcon from '@mui/icons-material/AttachMoney';\n\nconst Balance = () => {\n\n    /*importing GlobalContext\n    using destructuring to avoid messy code.\n    with out destructuring we need to context.history to map the array*/\n    const { history } = useContext(GlobalContext);\n\n    //getting all the amounts into an array\n    const amount = history.map(values => values.amount);\n    //using reduce to get our balance\n    const total = amount.reduce((acc, item) => (acc += item), 0).toFixed(2);\n\n    return (\n        <>\n            <h4 className='balance-text'>Total balance</h4>\n            <span className='balance-amunt'>\n                <AttachMoneyIcon className='balance-icon' />\n                {total}\n            </span>\n        </>\n    )\n}\n\nexport default Balance;","import React, { useState } from 'react'\n//css\nimport './PopUp.css';\n//material ui\nimport { Button } from '@mui/material';\n//icons\nimport CancelIcon from '@mui/icons-material/Cancel';\n\nconst PopUp = (props) => {\n    console.log('pop up', props);\n\n    const [newText, setNewText] = useState('');\n    const [newAmount, setNewAmount] = useState('');\n\n\n    const callDelete = async () => {\n        props.delete(props.popUpData.id);\n        const res = await fetch(`http://ec2-3-96-201-188.ca-central-1.compute.amazonaws.com/api/post//delete/${props.popUpData.id}`, {\n            method: 'DELETE',\n        })\n        console.log(res);\n        closePopUp();\n    }\n\n    const submitForm = (e) => {\n        e.preventDefault();\n        if (newText === '' || newAmount === '') {\n            alert('ERROR! Please put some value');\n        } else {\n            let newData = {\n                text: newText,\n                amount: parseInt(newAmount),\n                id: props.popUpData.id\n            };\n            // console.log(newData);\n            props.update(newData);\n            closePopUp();\n        }\n    }\n\n    const closePopUp = () => {\n        props.close();\n    }\n\n    return (\n        <>\n            {/* <div className='popUp-wrap'>\n                <div className='popUp'>\n                    <form className='popUp-formWrap ' onSubmit={submitForm}>\n\n                    </form>\n                </div>\n            </div> */}\n            <div className='popUp-wrap '>\n                <div className='popUp'>\n                    <CancelIcon onClick={closePopUp} className='popUp-btn' />\n                    <div className='popUp-newPost'>\n                        <p>Update Transaction</p>\n                    </div>\n                    <div className='popUp-container'>\n                        <form onSubmit={submitForm}>\n                            <div className='popUp-inputContainer'>\n                                <div className='popUp-text'>\n                                    <label>New name: </label>\n                                </div>\n                                <input value={newText} type=\"text\" placeholder='New name here...' onChange={(e) => setNewText(e.target.value)} />\n                            </div>\n                            <div className='popUp-inputContainer'>\n                                <div className='popUp-text'>\n                                    <label>New amount: </label>\n                                </div>\n                                <input value={newAmount} type=\"text\" placeholder='New amount here...' onChange={(e) => setNewAmount(e.target.value)} />\n                            </div>\n                            <div className='popUp-btnContainer'>\n                                <Button\n                                    type='submit'\n                                    className='popUp-btnUpdate'\n                                    variant=\"contained\"\n                                >Update</Button>\n                                <Button\n                                    onClick={callDelete}\n                                    className='popUp-btnUpdate delete'\n                                    variant=\"contained\"\n                                >Delete</Button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </>\n\n    )\n}\n\nexport default PopUp;","import React, { useContext, useState } from \"react\";\nimport { GlobalContext } from \"../ContextAPI/GlobalState\";\nimport { Link } from \"react-router-dom\";\nimport moment from \"moment\";\n//pages\nimport PopUp from './PopUp';\n//css\nimport './ComingUp.css';\n//icons\nimport MoreHorizIcon from '@mui/icons-material/MoreHoriz';\n\nconst ComingUp = () => {\n\n    //update this for only from 'x' date.\n    const { history } = useContext(GlobalContext);\n    const { deleteTransaction } = useContext(GlobalContext);\n    const { updateTransaction } = useContext(GlobalContext);\n    const [isUpdating, setIsUpdating] = useState({ open: false });\n\n    let currentDateMoment = moment();\n    const currentDate = moment(currentDateMoment._d).format('YYYY-MM-DD');\n    //filtering future expense\n    const expense = history.filter((data) => data.amount < 0);\n    const futureExpenses = expense.filter((data)=>data.date > currentDate);\n    // console.log(currentDateMoment._d);\n    // console.log(currentDate);\n    // console.log(futureExpenses, 'FUTURE');\n\n    const popUpModal = (id) => {\n\n        setIsUpdating({\n            open: !isUpdating,\n            id\n        });\n    }\n    const closePopUp = () => {\n        setIsUpdating({ open: false });\n    }\n\n    return (\n        <>\n            <div className='comingUp-container'>\n                <h4 className='comingUp-text'>Coming Up</h4>\n                <div className='comingUp-cardContainer'>\n                    {futureExpenses.length > 0 ? futureExpenses.map((item) => (\n                        <div key={item.id} className={`comingUp-card ${item.amount > 0 ? 'comingUp-positive' : 'comingUp-negative'}`}>\n                            <div className='comingUp-header'>\n                                <span className='comingUp-itemName' >{item.name}</span>\n                                <MoreHorizIcon onClick={() => popUpModal(item.id)} className='comingUp-details' />\n                            </div>\n                            <p className='comingUp-date'>{moment(item.date).format('MMM DD')}</p>\n                            <p className='comingUp-amount'>$ {item.amount}</p>\n                            {isUpdating.id === item.id ? <PopUp close={closePopUp} delete={deleteTransaction} update={updateTransaction} popUpData={isUpdating} /> : null}\n                        </div>)) :\n                        <div className=\"comingUp-noExpense\" >\n                            <h5>Nothing to show here...</h5>\n                        </div>\n                    }\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default ComingUp;\n","import { useContext, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { GlobalContext } from \"../ContextAPI/GlobalState\";\nimport moment from \"moment\";\n//material ui\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\n//pages\nimport PopUp from './PopUp';\n//icons\nimport MoreHorizIcon from '@mui/icons-material/MoreHoriz';\n//css\nimport './History.css'\n//fetching data\nimport FetchUsersTransactions from '../ContextAPI/FetchUsersTransactions';\n\nexport default function History(props) {\n\n    /*importing GlobalContext\n    using destructuring to avoid messy code.\n    with out destructuring we need to do context.history to map the array*/\n    const { history } = useContext(GlobalContext);\n    console.log(history, \"history\");\n    const { deleteTransaction } = useContext(GlobalContext);\n    const { updateTransaction } = useContext(GlobalContext);\n    const [isUpdating, setIsUpdating] = useState({ open: false });\n    //importing data from the fetch js\n    const userTransactions = [FetchUsersTransactions()][0];\n\n    const popUpModal = (id) => {\n\n        setIsUpdating({\n            open: !isUpdating,\n            id\n        });\n    }\n    const closePopUp = () => {\n        setIsUpdating({ open: false });\n    }\n\n    return (\n        <>\n            <Box sx={{ flexGrow: 1 }}>\n                <Grid\n                    container\n                    spacing={{ xs: 2, md: 3 }}\n                    columns={{ xs: 1, sm: 9, md: 12 }}\n                    className='overview-historyContainer'>\n                    {history.length > 0 ? history.map(item => {\n                        // console.log(item.id, isUpdating, 'Value');\n                        return (\n                            <Grid item xs={1} sm={4} md={5} key={item.id} className={`overview-transaction ${item.amount > 0 ? 'positive' : 'negative'}`}>\n                                <li className='overview-list'>\n                                    <div className='overview-text'>\n                                        <span>{item.name}</span>\n                                        <br />\n                                        <span>{moment(item.date).format('MMM-DD-YYYY')}</span>\n                                    </div>\n                                    <div className='overview-amount'>\n                                        {/* CREATE CONDITIONAL FOR NEGATIVE OR POSITIVE SIGN */}\n                                        <span>{item.amount > 0 ? '+' : '-'} {Math.abs(item.amount)}</span>\n                                    </div>\n                                    <div className='detailsIcon'>\n                                        <MoreHorizIcon onClick={() => popUpModal(item.id)} />\n                                    </div>\n                                </li>\n                                {isUpdating.id === item.id ? <PopUp close={closePopUp} delete={deleteTransaction} update={updateTransaction} popUpData={isUpdating} /> : null}\n                            </Grid>\n                        )\n                    }) :\n                        <div className=\"history-noExpense\" >\n                            <h3>No expense to show</h3>\n                            <Link to='/AddPayment' className=\"history-link\" >Click here to add one</Link>\n                        </div>\n                    }\n                </Grid>\n            </Box>\n        </>\n    )\n}\n","import React from 'react';\nimport {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend,\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport faker from 'faker';\n\nChartJS.register(\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend\n);\n\nexport const options = {\n    redraw: true,\n    responsive: true,\n    interaction: {\n        mode: 'index' as const,\n        intersect: false,\n    },\n    stacked: false,\n    plugins: {\n        title: {\n            display: true,\n            text: 'Chart.js Line Chart - Multi Axis',\n        },\n    },\n    scales: {\n        y: {\n            type: 'linear' as const,\n            display: true,\n            position: 'left' as const,\n        },\n        y1: {\n            type: 'linear' as const,\n            display: true,\n            position: 'right' as const,\n            grid: {\n                drawOnChartArea: false,\n            },\n        },\n    },\n};\n\nconst labels = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\n\nexport const data = {\n    labels,\n    datasets: [\n        {\n            label: 'Dataset 1',\n            data: labels.map(() => faker.datatype.number({ min: -1000, max: 1000 })),\n            borderColor: 'rgb(255, 99, 132)',\n            backgroundColor: 'rgba(255, 99, 132, 0.5)',\n            yAxisID: 'y',\n        },\n        {\n            label: 'Dataset 2',\n            data: labels.map(() => faker.datatype.number({ min: -1000, max: 1000 })),\n            borderColor: 'rgb(53, 162, 235)',\n            backgroundColor: 'rgba(53, 162, 235, 0.5)',\n            yAxisID: 'y1',\n        },\n    ],\n};\n\nexport default function MultiAxis() {\n    return <Line redraw= {true} options={options} data={data} />;\n}\n","import React from 'react';\nimport {\n    Chart as ChartJS,\n    RadialLinearScale,\n    PointElement,\n    LineElement,\n    Filler,\n    Tooltip,\n    Legend,\n} from 'chart.js';\nimport { Radar } from 'react-chartjs-2';\n\nChartJS.register(\n    RadialLinearScale,\n    PointElement,\n    LineElement,\n    Filler,\n    Tooltip,\n    Legend\n);\n\nexport const data = {\n    labels: ['Groceries', 'Food', 'Entertainment', 'Travel', 'Bill', 'Fuel'],\n    datasets: [\n        {\n            label: '# of Votes',\n            data: [2, 9, 3, 5, 2, 3],\n            backgroundColor: 'rgba(255, 99, 132, 0.2)',\n            borderColor: 'rgba(255, 99, 132, 1)',\n            borderWidth: 1,\n        },\n    ],\n};\n\nexport default function App() {\n    return <Radar redraw={true} data={data} />;\n}\n","//material ui\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\n//css\nimport './Overview.css'\n//importing pages\nimport Header from \"../Navbar/Header\";\nimport Navbar from \"../Navbar/Navbar\";\nimport Balance from './Balance';\nimport ComingUp from \"./ComingUp\";\nimport History from './History';\n//chart\nimport MultiAxis from './Charts/MultiAxis';\nimport Radar from './Charts/Radar';\n\nconst Overview = () => {\n\n    return (\n        <>\n            <Box sx={{ flexGrow: 1 }}>\n                <Grid xs={0} className='overview-container'>\n                    <Header />\n                    <Balance />\n                    <h6 className='overview-historyText'>History</h6>\n                    <History />\n                </Grid>\n                <ComingUp />\n                <MultiAxis />\n                <Radar />\n                <Navbar />\n            </Box>\n        </>\n    );\n}\n\nexport default Overview;","import { useState, useContext } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { GlobalContext } from '../ContextAPI/GlobalState';\n//css\nimport './AddPayment.css';\n//material \nimport Box from '@mui/material/Box';\nimport { Button, FormControl, Input, InputAdornment, InputLabel, Typography } from '@mui/material';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\n//icons\nimport LabelIcon from '@mui/icons-material/Label';\nimport TodayIcon from '@mui/icons-material/Today';\nimport MonetizationOnIcon from '@mui/icons-material/MonetizationOn';\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos';\nimport CategoryIcon from '@mui/icons-material/Category';\n\nexport const AddPayment = () => {\n    //Hook. create state and a function to manipulate the state (setText and setAmount)\n    const [text, setText] = useState('');\n    const [date, setDate] = useState('');\n    const [categories, setCategories] = useState('');\n    const [amount, setAmount] = useState(0);\n\n    //use transaction action\n    const { addTransaction } = useContext(GlobalContext);\n\n    const onSubmit = async e => {\n        e.preventDefault();\n\n        // const newTRansaction = {\n        //     //passinf value into object\n        //     text,\n        //     date,\n        //     categories,\n        //     amount: +amount\n        // }\n\n        // console.log('new transaction', newTRansaction);\n\n        if (text === '' || date === '' || amount === '' || categories === '') {\n            alert('You must complete all fields!')\n        } else {\n            // Sync a post with a user\n            const response = await fetch('http://ec2-3-96-201-188.ca-central-1.compute.amazonaws.com/api/post', {\n                method: \"POST\",\n                headers: {\n                    'x-access-token': localStorage.getItem('access-token'),\n                },\n                body: JSON.stringify({\n                    name: text,\n                    date: date,\n                    categories: categories,\n                    amount: +amount\n                })\n            })\n\n            console.log(response);\n\n            const data = await response.json();\n            console.log(data.data[0], \"data\");\n            alert(data.message);\n\n            //call addTransaction from context and passing newTransaction\n            // addTransaction(newTRansaction);\n            setText('');\n            setDate('');\n            setAmount('');\n            setCategories('');\n        }\n\n    }\n\n\n\n    return (\n        <>\n            <div className='addPayment-header' >\n                <Link to='/overview' className='addPayment-backBtn' >\n                    <ArrowBackIosIcon fontSize='small' />\n                </Link>\n            </div>\n            <div className='addPayment'>\n                <Typography className='addPayment-title' variant=\"h6\" gutterBottom component=\"div\" sx={{ m: 5, px: 5 }}>\n                    Add a Bill\n                </Typography>\n            </div>\n            <Box className='addPayment-boxContainer' sx={{ display: 'flex', alignItems: 'flex-end', m: 5 }}>\n                <form className='addPayment-formContainer' onSubmit={onSubmit}>\n                    <FormControl variant=\"standard\" sx={{ m: 5 }}>\n                        <InputLabel htmlFor=\"name\">\n                            Name\n                        </InputLabel>\n                        {/* use onchange to update the state and call function to give us whatever is being typed */}\n                        <Input\n                            type=\"text\"\n                            value={text}\n                            onChange={(e) => setText(e.target.value)}\n                            placeholder=\"Enter text..\"\n                            id=\"input-with-icon-purchaseditem\"\n                            startAdornment={\n                                <InputAdornment position=\"start\">\n                                    <LabelIcon />\n                                </InputAdornment>\n                            }\n                        />\n                    </FormControl>\n\n                    <FormControl variant=\"standard\" sx={{ m: 5 }}>\n                        <InputLabel htmlFor=\"date\">\n                            Date\n                        </InputLabel>\n                        {/* use onchange to update the state and call function to give us whatever is being typed */}\n                        <Input\n                            id=\"input-with-icon-autowidth\"\n                            startAdornment={\n                                <InputAdornment position=\"start\">\n                                    <TodayIcon />\n                                </InputAdornment>\n                            }\n                            input type=\"date\"\n                            value={date} onChange={(e) => setDate(e.target.value)}\n                            placeholder=\"Enter Date...\"\n                        />\n                    </FormControl>\n\n                    <FormControl variant=\"standard\" sx={{ m: 5 }}>\n                        <InputLabel id=\"demo-simple-select-standard-label\">Categories</InputLabel>\n                        <Select\n                            startAdornment={\n                                <InputAdornment position=\"start\">\n                                    <CategoryIcon />\n                                </InputAdornment>\n                            }\n                            labelId=\"demo-simple-select-standard-label\"\n                            id=\"demo-simple-select-standard\"\n                            value={categories}\n                            onChange={(e) => setCategories(e.target.value)}\n                            label=\"Categories\"\n                        >\n                            <MenuItem value={'Groceries'}>Groceries</MenuItem>\n                            <MenuItem value={'Food'}>Food</MenuItem>\n                            <MenuItem value={'Entertainment'}>Entertainment</MenuItem>\n                            <MenuItem value={'Travel'}>Travel</MenuItem>\n                            <MenuItem value={'Bill'}>Bill</MenuItem>\n                            <MenuItem value={'Fuel'}>Fuel</MenuItem>\n                        </Select>\n                    </FormControl>\n\n                    <FormControl variant=\"standard\" sx={{ m: 5 }}>\n                        <InputLabel htmlFor=\"amount\">\n                            Amount\n                        </InputLabel>\n                        {/* use onchange to update the state and call function to give us whatever is being typed */}\n                        <Input\n                            id=\"input-with-icon-calender-autowidth\"\n                            startAdornment={\n                                <InputAdornment position=\"start\">\n                                    <MonetizationOnIcon />\n                                </InputAdornment>\n                            }\n                            input type=\"number\"\n                            value={amount}\n                            onChange={(e) => setAmount(e.target.value)}\n                            placeholder=\"Enter amount...\"\n                        />\n                    </FormControl>\n\n                    <Button type=\"submit\" variant=\"contained\" sx={{ m: 2 }} >Add Bill</Button>\n                </form>\n            </Box>\n        </>\n    )\n}\n\nexport default AddPayment;\n","import React, { useContext } from 'react'\nimport { GlobalContext } from \"../ContextAPI/GlobalState\";\n\n\nimport Paper from \"@material-ui/core/Paper\";\nimport './SpentEarned.css'\n\n\nexport const SpentEarned = () => {\n  const { history } = useContext(GlobalContext);\n\n  const amounts = history.map( history => history.amount);\n\n  // Calculate the total earned\n  const earned = amounts\n    .filter(item => item > 0)\n    .reduce((acc, item) => (acc += item), 0);\n\n    // Calculate the total spent\n  const spent = (\n    amounts.filter(item => item < 0).reduce((acc, item) => (acc += item), 0) *\n    -1\n  );\n\n  return (\n    <>\n      <Paper elevation={3} className=\"SpentEarned\">\n        <div>\n          <h4>Spent</h4>\n          <p>${spent}</p>\n        </div>\n        <div>\n          <h4>Earned</h4>\n          <p>${earned}</p>\n        </div>\n      </Paper>\n    </>\n  )\n}\n\n","import React,{ useContext, useState, useEffect } from 'react';\nimport {\n  Chart as ChartJS,\n  RadialLinearScale,\n  ArcElement,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport { PolarArea } from 'react-chartjs-2';\nimport { GlobalContext } from \"../ContextAPI/GlobalState\";\n\nChartJS.register(RadialLinearScale, ArcElement, Tooltip, Legend);\n\nexport const data = {\n  labels: ['Dribble', 'Netflix', 'Skillshare', 'Spotify', 'Sketch', 'Ivnision'],\n  datasets: [\n    {\n      label: '# of Votes',\n      data: [12, 19, 3, 5, 2, 3],\n      backgroundColor: [\n        'rgba(255, 99, 132, 0.5)',\n        'rgba(54, 162, 235, 0.5)',\n        'rgba(255, 206, 86, 0.5)',\n        'rgba(75, 192, 192, 0.5)',\n        'rgba(153, 102, 255, 0.5)',\n        'rgba(255, 159, 64, 0.5)',\n      ],\n      borderWidth: 1,\n    },\n  ],\n};\n\n\n\nexport function Breakdown() {\n\nconst { history } = useContext(GlobalContext);\nconst [expense, setExpense] = useState([]);\n\nuseEffect(() => {\n  const expense = history.filter((data) => data.amount < 0);\n  let mainData = { label: expense.map((data) => data.name)};\n  mainData.datasets = [\n    {\n      label: \"# of Votes\",\n      data:[25, 6, 2, 7, 8, 24], //??\n      backgroundColor: [\n        'rgba(255, 99, 132, 0.5)',\n        'rgba(54, 162, 235, 0.5)',\n        'rgba(255, 206, 86, 0.5)',\n        'rgba(75, 192, 192, 0.5)',\n        'rgba(153, 102, 255, 0.5)',\n        'rgba(255, 159, 64, 0.5)',\n      ],\n      borderWidth: 1\n    }\n  ]\n  console.log(mainData, \"Data\");\n  setExpense(mainData);\n  console.log(expense, 'expense');\n\n}, [history])\n\n  return <PolarArea data={data} />;\n}\n\n// function getRandomColor() {\n//   var letters = '0123456789ABCDEF'.split('');\n//   var color = '#';\n//   for (var i = 0; i < 6; i++ ) {\n//       color += letters[Math.floor(Math.random() * 16)];\n//   }\n//   return color;\n//       }","import { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\nimport React, { useContext } from 'react'\nimport { GlobalContext } from \"../ContextAPI/GlobalState\";\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\n\n\nexport function Chart () {\n\n\n  const { history } = useContext(GlobalContext);\n\nconst amounts = history.map( history => history.amount);\n\n// Calculate the total earned\nconst earned = amounts\n  .filter(item => item > 0)\n  .reduce((acc, item) => (acc += item), 0);\n\n  // Calculate the total spent\nconst spent = (\n  amounts.filter(item => item < 0).reduce((acc, item) => (acc += item), 0) *\n  -1\n);\n\n const data = {\n  labels: ['Spent', 'Earned'],\n  datasets: [\n    {\n      label: '# of Votes',\n      data: [spent, earned],\n      borderColor: [\n        'rgba(65, 110, 238, 0.5 )',\n        'rgba(255, 187, 86, 0.5 )',\n      ],\n      backgroundColor: [\n        'rgba(65, 110, 238, 0.8)',\n        'rgba(255, 187, 86, 0.8)',\n      ],\n      borderWidth: 1,\n      bordershadow: 1,\n    },\n  ],\n};\n\n\n  return <Doughnut\n  data={data} />;\n}\n","import React from 'react'\nimport { SpentEarned } from './SpentEarned'\nimport { Breakdown } from './Breakdown'\nimport { Chart } from './Chart'\nimport './Report.css'\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\n\n\nconst Report = () => {\n  return (\n    <>\n      <Box sx={{ display: 'flex', alignItems: 'center', m: 5 }}>\n        <Grid className=\"report-container\">\n          <h1 className=\"text-left\">Report</h1>\n          <Chart />\n          <SpentEarned />\n          <h5 className=\"text-left\">SPENDING BREAKDOWN</h5>\n          <Breakdown />\n        </Grid>\n      </Box>\n    </>\n  )\n}\n\nexport default Report;\n","//importing react-router modules\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\n//css\nimport './AppRouter.css'\n//importing pages\nimport SignIn from \"../components/SignIn&SignUp/SignIn\";\nimport SignUp from \"../components/SignIn&SignUp/SignUp\";\nimport Overview from '../components/Overview/Overview';\nimport AddPayment from '../components/AddPayment/AddPayment';\nimport Report from '../components/Report/Report';\n\n//creating react router\nconst AppRouter = () => {\n    //returning pages to be render, required for react-router-dom v6.\n    return (\n            <div className='container'>\n                <BrowserRouter>\n                    {/* \"Routes\" is the new switch, and element is the new component. */}\n                    <Routes>\n                        <Route path='/' element={<SignIn />} exact={true} />\n                        <Route path='/signUp' element={<SignUp />} />\n                        <Route path='/overview' element={<Overview />} />\n                        <Route path='/AddPayment' element={<AddPayment />} />\n                        <Route path='/report' element={<Report />} />\n                    </Routes>\n                </BrowserRouter>\n            </div>\n    );\n\n}\n\nexport default AppRouter;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport AppRouter from './router/AppRouter';\n//importing only the global provider function, from the GlobalState component\nimport { GlobalProvider } from './components/ContextAPI/GlobalState';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalProvider>\n      <AppRouter />\n    </GlobalProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}